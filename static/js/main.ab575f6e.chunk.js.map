{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","robot","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,cAAC,WAAD,UACKA,EAAOC,KAAI,SAACC,EAAOC,GAChB,OACI,cAAC,EAAD,CAAqBR,GAAIO,EAAMP,GAAIF,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,OAAvDQ,EAAMP,UCOtBS,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,8BACI,uBACIV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAAtE,SACKJ,EAAMK,aCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKX,MAAMK,a,GAhBEQ,IAAMC,WCgDnBC,E,kDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CACVlB,YAAauB,EAAMC,OAAOC,SAd9B,EAAKZ,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChB0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,oBAS/C,WACI,MAAgCb,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV+B,EAAepC,EAAOqC,QAAO,SAACnC,GAChC,OAAOA,EAAMT,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQtC,EAAOwC,OAIP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQoC,WARlC,6C,GA3BMZ,IAAMC,WCKTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab575f6e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='bg-light-green dib tc br3 pa3 ma2 grow shadow-2'>\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React, { Fragment } from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({robots}) => {\n    return (\n        <Fragment>\n            {robots.map((robot, index) => {\n                return (\n                    <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />\n                );\n            })}\n        </Fragment>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ( {searchfield, searchChange} ) => {\n    return (\n        <div>\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\"\n                placeholder=\"search robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '80vh' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Fragment } from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oops.  That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({\n            searchfield: event.target.value\n        });\n    }\n\n    render() {\n        const { robots, searchfield } = this.state\n        const filterRobots = robots.filter((robot) => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !robots.length ?\n            <h1>Loading</h1>\n            :\n            (\n                <div className=\"tc\">\n                    <h1 className=\"f2\">Robofriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filterRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}